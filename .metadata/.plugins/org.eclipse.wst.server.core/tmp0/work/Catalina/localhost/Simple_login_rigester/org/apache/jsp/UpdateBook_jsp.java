/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.85
 * Generated at: 2024-06-30 13:41:38 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.sql.Blob;
import java.sql.ResultSet;
import java.sql.PreparedStatement;
import java.sql.DriverManager;
import java.sql.Connection;

public final class UpdateBook_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.sql.Connection");
    _jspx_imports_classes.add("java.sql.ResultSet");
    _jspx_imports_classes.add("java.sql.Blob");
    _jspx_imports_classes.add("java.sql.PreparedStatement");
    _jspx_imports_classes.add("java.sql.DriverManager");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Update Books</title>\r\n");
      out.write("<link\r\n");
      out.write("	href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css\"\r\n");
      out.write("	rel=\"stylesheet\"\r\n");
      out.write("	integrity=\"sha384-T3c6CoIi6uLrA9TneNEoa7RxnatzjcDSCmG1MXxSR1GAsXEV/Dwwykc2MPK8M2HN\"\r\n");
      out.write("	crossorigin=\"anonymous\">\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("	<!-- to retrieve the email and send it through the form by hiding -->\r\n");
      out.write("	");

	Connection con;
	PreparedStatement pstmt;
	ResultSet rs;
	String bookname = null;
	String bookauth = null;
	int pubyear = 0;
	Blob img = null;
	HttpServletRequest req = (HttpServletRequest) pageContext.getRequest();
	String email = req.getParameter("e");
	String id = req.getParameter("u");
	int bookid = Integer.parseInt(id);
	System.out.println("Inside Updatebook.jsp   " + email);
	Class.forName("com.mysql.cj.jdbc.Driver");
	System.out.println("loaded");
	con = DriverManager.getConnection("jdbc:mysql://localhost:3306/login", "root", "Manu2341");
	System.out.println("conected");
	pstmt = con.prepareStatement("Select * from books where `book_id`=?");
	pstmt.setInt(1, bookid);
	rs = pstmt.executeQuery();
	while (rs.next()) {
		bookname = rs.getString(3);
		System.out.println("inside updatebook.java bookname  " + bookname);
		bookauth = rs.getString(4);
		System.out.println("inside updatebook.java bookauth  " + bookauth);
		pubyear = rs.getInt(5);
		System.out.println("inside updatebook.java pubyear   " + pubyear);
	}
	
      out.write("\r\n");
      out.write("\r\n");
      out.write("	<nav class=\"navbar navbar-expand-lg bg-body-tertiary\">\r\n");
      out.write("		<div class=\"container-fluid\">\r\n");
      out.write("			<div class=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n");
      out.write("				<ul class=\"navbar-nav\">\r\n");
      out.write("					<li class=\"nav-item\"><a class=\"nav-link active\"\r\n");
      out.write("						aria-current=\"page\" href=\"Home.jsp\">Home</a></li>\r\n");
      out.write("					<li class=\"nav-item\"><a class=\"nav-link\" href=\"viewbook.jsp\">viewbook</a>\r\n");
      out.write("					</li>\r\n");
      out.write("					<li class=\"nav-item\"><a class=\"nav-link\" href=\"add.jsp\">Addbooks</a>\r\n");
      out.write("					</li>\r\n");
      out.write("					<li class=\"nav-item\"><a class=\"nav-link\" href=\"Store.jsp\">Web\r\n");
      out.write("							Store</a></li>\r\n");
      out.write("					<li class=\"nav-item\"><a class=\"nav-link\" aria-disabled=\"true\"\r\n");
      out.write("						href=\"aboutus.jsp\">Aboutus</a></li>\r\n");
      out.write("				</ul>\r\n");
      out.write("			</div>\r\n");
      out.write("		</div>\r\n");
      out.write("	</nav>\r\n");
      out.write("	<div class=\"container text-left\">\r\n");
      out.write("		<div class=\"row\">\r\n");
      out.write("			<div class=\"col-4\"></div>\r\n");
      out.write("			<div class=\"col-4\">\r\n");
      out.write("				<h1 class=\"text-center\">Update Books</h1>\r\n");
      out.write("\r\n");
      out.write("				<!--form for adding the books  -->\r\n");
      out.write("				<form action=\"Update?e=");
      out.print(email);
      out.write("&id=");
      out.print(bookid);
      out.write("\" method=\"post\"\r\n");
      out.write("					enctype=\"multipart/form-data\">\r\n");
      out.write("					<div class=\"mb-3\">\r\n");
      out.write("						");

						System.out.println("Inside the form in updatebook.jsp   " + email);
						
      out.write("\r\n");
      out.write("\r\n");
      out.write("						<label for=\"Bookname\" class=\"form-label\">Book Name </label> <input\r\n");
      out.write("							type=\"text\" value=\"");
      out.print(bookname);
      out.write("\" class=\"form-control\"\r\n");
      out.write("							id=\"Bookname\" name=\"Bookname\" aria-describedby=\"text\"\r\n");
      out.write("							placeholder=\"Enter The book Name\" required>\r\n");
      out.write("					</div>\r\n");
      out.write("					<div class=\"mb-3\">\r\n");
      out.write("						<label for=\"Bookauth\" class=\"form-label\"> Book author</label> <input\r\n");
      out.write("							type=\"text\" class=\"form-control\" value=\"");
      out.print(bookauth);
      out.write("\"\r\n");
      out.write("							name=\"Bookauth\" id=\"Bookauth\" placeholder=\"Enter The author name\"\r\n");
      out.write("							required>\r\n");
      out.write("					</div>\r\n");
      out.write("					<div class=\"mb-3\">\r\n");
      out.write("						<label for=\"number\" class=\"form-label\">Published year</label> <input\r\n");
      out.write("							type=\"number\" class=\"form-control\" value=\"");
      out.print(pubyear);
      out.write("\"\r\n");
      out.write("							name=\"publishyear\" id=\"publishyear\"\r\n");
      out.write("							placeholder=\"Enter The Published Year\" required>\r\n");
      out.write("					</div>\r\n");
      out.write("					<label>Insert Image Of book</label> <br> <input type=\"file\"\r\n");
      out.write("						name=\"file\" accept=\".jpg, .jpeg, .png, .gif\" required> <br>\r\n");
      out.write("					<button type=\"submit\" class=\"btn btn-primary\">Submit</button>\r\n");
      out.write("				</form>\r\n");
      out.write("			</div>\r\n");
      out.write("			<div class=\"col-4\"></div>\r\n");
      out.write("		</div>\r\n");
      out.write("	</div>\r\n");
      out.write("	<script\r\n");
      out.write("		src=\"https://cdn.jsdelivr.net/npm/@popperjs/core@2.11.8/dist/umd/popper.min.js\"\r\n");
      out.write("		integrity=\"sha384-I7E8VVD/ismYTF4hNIPjVp/Zjvgyol6VFvRkX/vR+Vc4jQkC+hVqc2pM8ODewa9r\"\r\n");
      out.write("		crossorigin=\"anonymous\"></script>\r\n");
      out.write("	<script\r\n");
      out.write("		src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.min.js\"\r\n");
      out.write("		integrity=\"sha384-BBtl+eGJRgqQAUMxJ7pMwbEyER4l1g+O15P+16Ep7Q9Q+zqX6gSbd85u4mG4QzX+\"\r\n");
      out.write("		crossorigin=\"anonymous\"></script>\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
